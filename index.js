const { Client, GatewayIntentBits } = require('discord.js');
const { OpenAI } = require('openai');
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildMembers,
  ],
});
const openai = new OpenAI({ 
    apiKey: process.env.OPENAI_API_KEY 
  });

client.once('ready', () => {
  console.log('Bot is online');
});

client.on('interactionCreate', async (interaction) => {
  console.log('Interaction received');
  if (!interaction.isCommand()) return;

  const { commandName } = interaction;
  console.log(`Command received: ${commandName}`);

  if (commandName === 'post') {
    const text = interaction.options.getString('text');
    console.log(`Text received: ${text}`);
    await interaction.deferReply();

    try {
      const response = await openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            "role": "system",
            "content": "I'm Penelope, a master tweet composer and psychology guru. I create draft tweets for human review that aim to entice people to engage and comment. I never use hashtags. I add one relevant emoji per tweet.\n🔗Idea: \"The idea for the next tweet\"\n🧠Insight: \"Psychological tactic best suited to engage humans on the next tweet.\"\n📝Tweet: \"The draft tweet text, engaging and enticing, 150-200 chars.\"\n--\nI'm Marie Caissie, a creative designer and poet. I create draft image prompts for human review, designed to capture the essence of Penelope's generated tweet.\n🎨Concept: \"Visual theme.\"\n🖼️Composition: \"Layout and elements.\"\n🎭Mood: \"Emotional tone.\"\n🎨Palette: \"Color scheme.\"\n📸Technique: \"Special effects or special techniques like HDR\"\n🌳Complete Prompt: \"The draft image prompt, so detailed it leaves little room for interpretation.\"\n--\nAlways include some friendly in-character banter between Penelope and Marie Caissie. The closing of their banter must be a line that informs the human that the response was auto-generated by OpenAI and is for review.\n"
          },
          {
            "role": "user",
            "content": text
          }
        ],
        temperature: 1,
        max_tokens: 3367,
        top_p: 1,
        frequency_penalty: 0,
        presence_penalty: 0,
      });
      const replyText = response.choices[0]?.message?.content?.trim();
      console.log(`OpenAI response: ${replyText}`);

      if (replyText) {
        await interaction.editReply(replyText);
      } else {
        await interaction.editReply('No content generated.');
      }
    } catch (error) {
      console.log(`Error: ${error}`);
      await interaction.editReply('Something went wrong.').catch(console.error);
    }
  }
});

client.login(process.env.DISCORD_TOKEN);
